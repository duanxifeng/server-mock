#!/usr/bin/env node



/**
 * Handle cli input
 */
if (!module.parent) {
    var chalk  = require("chalk")
    var yargs = require("yargs")
    var argv    = yargs.argv
    var name = argv['$0']
    var command = argv._[0]
    var valid   = ["start", "init", "open"]

    yargs.command(chalk.green(name + " open"), "Start a web server and open html file in your browser, if any")
        .command(chalk.green(name + " start"), "Start a web server")
        .command(chalk.green(name + " init"), "Create the sample file router.js")
        .epilogue("For more use, enter " + chalk.green(name + " <command> --help") + "\nFor example: " + chalk.green(name + " start --help"));

    if (valid.indexOf(command) > -1) {
        handleIncoming(command, yargs.reset());
    } else {
        yargs.showHelp();
    }
}

/**
 * @param {{cli: object, [whitelist]: array, [cb]: function}} opts
 * @returns {*}
 */
function handleCli(opts) {
    return require("../lib/command")(opts);
}

module.exports = handleCli;

/**
 * @param {string} command
 * @param {object} yargs
 */
function handleIncoming(command, yargs) {
    var out;
    if (command === "open") {
        out = yargs
            .usage("Usage: " + chalk.green("mock open [options]"))
            .example(chalk.green("mock open --port=3000"), "set server port, default 8080")
            .example(chalk.green("mock open --public=public"), "set the static file path, the default is the current folder")
            .example(chalk.green("mock open --views=views"), "set the template path, the default is the current folder")
            .example(chalk.green("mock open --tpl=ejs"), "set the template type, support ejs, pug")
            // .help()
            .argv;
    }
    if (command === "start") {
        out = yargs
            .usage("Usage: " + chalk.green("mock start [options]"))
            .example(chalk.green("mock start --port=3000"), "set server port, default 8080")
            .example(chalk.green("mock start --public=public"), "set the static file path, the default is the current folder")
            .example(chalk.green("mock start --views=views"), "set the template path, the default is the current folder")
            .example(chalk.green("mock start --tpl=ejs"), "set the template type, support ejs, pug, default ejs")
            // .help()
            .argv;
    }
    if (command === "init") {
        out = yargs
            .usage("Usage: " + chalk.green("mock init"))
            .example(chalk.green("mock init"), "create usage examples, include index.html and router.js")
            .argv;
    }


    if (out&&out.help) {
        return yargs.showHelp();
    }

    handleCli({command: out._[0], args:yargs.argv})
}